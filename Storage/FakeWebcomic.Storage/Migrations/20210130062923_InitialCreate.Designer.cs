// <auto-generated />
using System;
using FakeWebcomic.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FakeWebcomic.Storage.Migrations
{
    [DbContext(typeof(FakeWebcomicContext))]
    [Migration("20210130062923_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FakeWebcomic.Storage.Models.ComicBook", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EditionNumber")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("ComicBooks");
                });

            modelBuilder.Entity("FakeWebcomic.Storage.Models.ComicPage", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ComicBookForeignKey")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PageNumber")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("ComicBookForeignKey");

                    b.ToTable("ComicPages");
                });

            modelBuilder.Entity("FakeWebcomic.Storage.Models.User", b =>
                {
                    b.Property<long>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FakeWebcomic.Storage.Models.ComicPage", b =>
                {
                    b.HasOne("FakeWebcomic.Storage.Models.ComicBook", "ComicBook")
                        .WithMany("ComicPages")
                        .HasForeignKey("ComicBookForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComicBook");
                });

            modelBuilder.Entity("FakeWebcomic.Storage.Models.ComicBook", b =>
                {
                    b.Navigation("ComicPages");
                });
#pragma warning restore 612, 618
        }
    }
}
